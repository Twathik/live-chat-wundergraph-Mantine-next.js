version: '3.9'

x-minio-common: &minio-common
  build: .
  command: server --console-address ":9001" http://minio{1...2}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minio
    MINIO_ROOT_PASSWORD: minio123
    MINIO_API_CORS_ALLOW_ORIGIN: ${MINIO_HOSTNAMES}
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

# starts 2 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.

services:
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
  traefik:
    image: "traefik:v2.6"
    container_name: "traefik"
    restart: unless-stopped
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "./traefik/conf.d:/etc/traefik/conf.d"
      - "./traefik/traefik.toml:/etc/traefik/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  postgres:
    image: postgres:13-alpine
    container_name: "postgres"
    ports:
      - "5432:5432"
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRESQL_DB}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}
    volumes:
      - ./database:/var/lib/postgresql/data

  keycloak:
    depends_on:
      - postgres
    container_name: "keycloak"
    environment:
      KEYCLOAK_PATH_PREFIX: keycloak
      PROXY_ADDRESS_FORWARDING: "true"
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: ${POSTGRESQL_DB}
      DB_USER: ${POSTGRESQL_USER}
      DB_PASSWORD: ${POSTGRESQL_PASS}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      KEYCLOAK_IMPORT: /tmp/live-chat-realm-export.json
    image: jboss/keycloak:${KEYCLOAK_VERSION}
    volumes:
    - "./live-chat-realm-export.json:/tmp/live-chat-realm-export.json"
    ports:
      - "8081:8080"
      - "9990:9990"
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - "traefik.http.routers.keycloak-admin.entrypoints=web"
      - "traefik.http.routers.keycloak-admin.service=keycloak-docker"
      - "traefik.http.routers.keycloak_admin.rule=Host(`keycloak.local`)"
      - "traefik.http.services.keycloak-docker.loadbalancer.server.port=8080"

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2: