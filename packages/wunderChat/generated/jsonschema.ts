// Code generated by wunderctl. DO NOT EDIT.

import { JSONSchema7 } from "json-schema";

interface Schema {
	GetUsers: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	CreateMessage: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	GetMessages: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	GetUser: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	UpdateAvatarId: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	UpdateProfile: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	UserCreate: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	UserUpdate: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	UserUpsert: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
}

const jsonSchema: Schema = {
	GetUsers: {
		input: { type: "object", properties: {}, additionalProperties: false, definitions: {} },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						usersDb_findManyUser: {
							type: "array",
							items: {
								type: "object",
								properties: { id: { type: "integer" }, email: { type: "string" }, name: { type: "string" } },
								additionalProperties: false,
								required: ["id", "email", "name"],
							},
						},
					},
					additionalProperties: false,
					required: ["usersDb_findManyUser"],
				},
			},
			additionalProperties: false,
		},
	},
	CreateMessage: {
		input: {
			type: "object",
			properties: { message: { type: "string" } },
			additionalProperties: false,
			definitions: {},
			required: ["message"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						usersDb_createOneChat: {
							type: "object",
							properties: { id: { type: "integer" }, message: { type: "string" }, userId: { type: "integer" } },
							additionalProperties: false,
							required: ["id", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	GetMessages: {
		input: {
			type: "object",
			properties: { take: { type: "integer" }, skip: { type: "integer" } },
			additionalProperties: false,
			definitions: {},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						usersDb_findManyChat: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "integer" },
									message: { type: "string" },
									createdAt: { type: "string" },
									User: {
										type: "object",
										properties: { userId: { type: "string" }, firstName: { type: "string" } },
										additionalProperties: false,
										required: ["userId", "firstName"],
									},
								},
								additionalProperties: false,
								required: ["id", "createdAt", "User"],
							},
						},
					},
					additionalProperties: false,
					required: ["usersDb_findManyChat"],
				},
			},
			additionalProperties: false,
		},
	},
	GetUser: {
		input: { type: "object", properties: {}, additionalProperties: false, definitions: {} },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						usersDb_findUniqueUser: {
							type: "object",
							properties: {
								id: { type: "integer" },
								firstName: { type: "string" },
								lastName: { type: "string" },
								email: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "firstName", "lastName", "email"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	UpdateAvatarId: {
		input: {
			type: "object",
			properties: {
				avatarId: {
					$ref: "#/definitions/usersDb_NullableStringFieldUpdateOperationsInput",
					title: "AvatarId",
					description: "Write something meaningful",
					pattern: "^[a-zA-Z 0-9]+$",
				},
			},
			additionalProperties: false,
			definitions: {
				usersDb_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: "object",
					properties: { set: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						usersDb_updateOneUser: {
							type: "object",
							properties: { id: { type: "integer" }, avatarId: { type: "string" } },
							additionalProperties: false,
							required: ["id"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	UpdateProfile: {
		input: {
			type: "object",
			properties: {
				firstName: { $ref: "#/definitions/usersDb_StringFieldUpdateOperationsInput" },
				lastName: { $ref: "#/definitions/usersDb_StringFieldUpdateOperationsInput" },
			},
			additionalProperties: false,
			definitions: {
				usersDb_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: "object",
					properties: { set: { type: "string" } },
				},
			},
			required: ["firstName", "lastName"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						usersDb_updateOneUser: {
							type: "object",
							properties: { id: { type: "integer" } },
							additionalProperties: false,
							required: ["id"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	UserCreate: {
		input: {
			type: "object",
			properties: {
				email: { type: "string" },
				userId: { type: "string" },
				name: { type: "string" },
				lastName: { type: "string" },
				firstName: {
					type: "string",
					title: "Prénom",
					description: "Veuillez introduire votre prénom",
					minLength: 2,
					maxLength: 250,
				},
			},
			additionalProperties: false,
			definitions: {},
			required: ["email", "userId", "name", "lastName", "firstName"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						usersDb_createOneUser: {
							type: "object",
							properties: { id: { type: "integer" } },
							additionalProperties: false,
							required: ["id"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	UserUpdate: {
		input: {
			type: "object",
			properties: {
				firstName: {
					$ref: "#/definitions/usersDb_StringFieldUpdateOperationsInput",
					title: "Prénom",
					description: "Veuillez introduire votre prénom",
					minLength: 2,
					maxLength: 250,
				},
			},
			additionalProperties: false,
			definitions: {
				usersDb_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: "object",
					properties: { set: { type: "string" } },
				},
			},
			required: ["firstName"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						usersDb_updateOneUser: {
							type: "object",
							properties: { id: { type: "integer" } },
							additionalProperties: false,
							required: ["id"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	UserUpsert: {
		input: {
			type: "object",
			properties: {
				userId: { type: "string" },
				create: { $ref: "#/definitions/usersDb_UserCreateInput" },
				update: { $ref: "#/definitions/usersDb_UserUpdateInput" },
			},
			additionalProperties: false,
			definitions: {
				usersDb_UserCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						email: { type: "string" },
						lastName: { type: "string" },
						firstName: { type: "string" },
						name: { type: "string" },
						userId: { type: "string" },
						avatarId: { type: "string" },
						Chat: { $ref: "#/definitions/usersDb_ChatCreateNestedManyWithoutUserInput" },
					},
					required: ["email", "lastName", "firstName", "name", "userId"],
				},
				usersDb_ChatCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/usersDb_ChatCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/usersDb_ChatCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/usersDb_ChatCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/usersDb_ChatWhereUniqueInput" },
					},
				},
				usersDb_ChatCreateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: { message: { type: "string" }, createdAt: { type: "string" } },
				},
				usersDb_ChatCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						where: { $ref: "#/definitions/usersDb_ChatWhereUniqueInput" },
						create: { $ref: "#/definitions/usersDb_ChatCreateWithoutUserInput" },
					},
					required: ["where", "create"],
				},
				usersDb_ChatWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: "integer" } },
				},
				usersDb_ChatCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: "object",
					properties: {
						data: { type: "array", items: { $ref: "#/definitions/usersDb_ChatCreateManyUserInput" } },
						skipDuplicates: { type: "boolean" },
					},
					required: ["data"],
				},
				usersDb_ChatCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: "integer" }, message: { type: "string" }, createdAt: { type: "string" } },
				},
				usersDb_UserUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						email: { $ref: "#/definitions/usersDb_StringFieldUpdateOperationsInput" },
						lastName: { $ref: "#/definitions/usersDb_StringFieldUpdateOperationsInput" },
						firstName: { $ref: "#/definitions/usersDb_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/usersDb_StringFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/usersDb_StringFieldUpdateOperationsInput" },
						avatarId: { $ref: "#/definitions/usersDb_NullableStringFieldUpdateOperationsInput" },
						Chat: { $ref: "#/definitions/usersDb_ChatUpdateManyWithoutUserInput" },
					},
				},
				usersDb_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: "object",
					properties: { set: { type: "string" } },
				},
				usersDb_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: "object",
					properties: { set: { type: "string" } },
				},
				usersDb_ChatUpdateManyWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/usersDb_ChatCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/usersDb_ChatCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/usersDb_ChatUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/usersDb_ChatCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/usersDb_ChatWhereUniqueInput" },
						set: { $ref: "#/definitions/usersDb_ChatWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/usersDb_ChatWhereUniqueInput" },
						delete: { $ref: "#/definitions/usersDb_ChatWhereUniqueInput" },
						update: { $ref: "#/definitions/usersDb_ChatUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/usersDb_ChatUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/usersDb_ChatScalarWhereInput" },
					},
				},
				usersDb_ChatUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						where: { $ref: "#/definitions/usersDb_ChatWhereUniqueInput" },
						update: { $ref: "#/definitions/usersDb_ChatUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/usersDb_ChatCreateWithoutUserInput" },
					},
					required: ["where", "update", "create"],
				},
				usersDb_ChatUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						message: { $ref: "#/definitions/usersDb_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/usersDb_DateTimeFieldUpdateOperationsInput" },
					},
				},
				usersDb_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: "object",
					properties: { set: { type: "string" } },
				},
				usersDb_ChatUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						where: { $ref: "#/definitions/usersDb_ChatWhereUniqueInput" },
						data: { $ref: "#/definitions/usersDb_ChatUpdateWithoutUserInput" },
					},
					required: ["where", "data"],
				},
				usersDb_ChatUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						where: { $ref: "#/definitions/usersDb_ChatScalarWhereInput" },
						data: { $ref: "#/definitions/usersDb_ChatUpdateManyMutationInput" },
					},
					required: ["where", "data"],
				},
				usersDb_ChatScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/usersDb_ChatScalarWhereInput" },
						OR: { type: "array", items: { $ref: "#/definitions/usersDb_ChatScalarWhereInput" } },
						NOT: { $ref: "#/definitions/usersDb_ChatScalarWhereInput" },
						id: { $ref: "#/definitions/usersDb_IntFilter" },
						message: { $ref: "#/definitions/usersDb_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/usersDb_DateTimeFilter" },
						userId: { $ref: "#/definitions/usersDb_IntFilter" },
					},
				},
				usersDb_IntFilter: {
					additionalProperties: false,
					type: "object",
					properties: {
						equals: { type: "integer" },
						in: { type: "array", items: { type: "integer" } },
						notIn: { type: "array", items: { type: "integer" } },
						lt: { type: "integer" },
						lte: { type: "integer" },
						gt: { type: "integer" },
						gte: { type: "integer" },
						not: { $ref: "#/definitions/usersDb_NestedIntFilter" },
					},
				},
				usersDb_NestedIntFilter: {
					additionalProperties: false,
					type: "object",
					properties: {
						equals: { type: "integer" },
						in: { type: "array", items: { type: "integer" } },
						notIn: { type: "array", items: { type: "integer" } },
						lt: { type: "integer" },
						lte: { type: "integer" },
						gt: { type: "integer" },
						gte: { type: "integer" },
						not: { $ref: "#/definitions/usersDb_NestedIntFilter" },
					},
				},
				usersDb_StringNullableFilter: {
					additionalProperties: false,
					type: "object",
					properties: {
						equals: { type: "string" },
						in: { type: "array", items: { type: "string" } },
						notIn: { type: "array", items: { type: "string" } },
						lt: { type: "string" },
						lte: { type: "string" },
						gt: { type: "string" },
						gte: { type: "string" },
						contains: { type: "string" },
						startsWith: { type: "string" },
						endsWith: { type: "string" },
						mode: { type: "string", enum: ["default", "insensitive"] },
						not: { $ref: "#/definitions/usersDb_NestedStringNullableFilter" },
					},
				},
				usersDb_NestedStringNullableFilter: {
					additionalProperties: false,
					type: "object",
					properties: {
						equals: { type: "string" },
						in: { type: "array", items: { type: "string" } },
						notIn: { type: "array", items: { type: "string" } },
						lt: { type: "string" },
						lte: { type: "string" },
						gt: { type: "string" },
						gte: { type: "string" },
						contains: { type: "string" },
						startsWith: { type: "string" },
						endsWith: { type: "string" },
						not: { $ref: "#/definitions/usersDb_NestedStringNullableFilter" },
					},
				},
				usersDb_DateTimeFilter: {
					additionalProperties: false,
					type: "object",
					properties: {
						equals: { type: "string" },
						in: { type: "array", items: { type: "string" } },
						notIn: { type: "array", items: { type: "string" } },
						lt: { type: "string" },
						lte: { type: "string" },
						gt: { type: "string" },
						gte: { type: "string" },
						not: { $ref: "#/definitions/usersDb_NestedDateTimeFilter" },
					},
				},
				usersDb_NestedDateTimeFilter: {
					additionalProperties: false,
					type: "object",
					properties: {
						equals: { type: "string" },
						in: { type: "array", items: { type: "string" } },
						notIn: { type: "array", items: { type: "string" } },
						lt: { type: "string" },
						lte: { type: "string" },
						gt: { type: "string" },
						gte: { type: "string" },
						not: { $ref: "#/definitions/usersDb_NestedDateTimeFilter" },
					},
				},
				usersDb_ChatUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						message: { $ref: "#/definitions/usersDb_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/usersDb_DateTimeFieldUpdateOperationsInput" },
					},
				},
			},
			required: ["userId", "create", "update"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						usersDb_upsertOneUser: {
							type: "object",
							properties: {
								id: { type: "integer" },
								email: { type: "string" },
								name: { type: "string" },
								avatarId: { type: "string" },
								firstName: { type: "string" },
								lastName: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "email", "name", "firstName", "lastName"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
};
export default jsonSchema;
