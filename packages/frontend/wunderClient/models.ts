// Code generated by wunderctl. DO NOT EDIT.

export interface CreateMessageInput {
	message: string;
}

export interface GetMessagesInput {
	take?: number;
	skip?: number;
}

export interface UpdateAvatarIdInput {
	avatarId?: usersDb_NullableStringFieldUpdateOperationsInput;
}

export interface UpdateProfileInput {
	firstName: usersDb_StringFieldUpdateOperationsInput;
	lastName: usersDb_StringFieldUpdateOperationsInput;
}

export interface UserCreateInput {
	email: string;
	userId: string;
	name: string;
	lastName: string;
	firstName: string;
}

export interface UserUpdateInput {
	firstName: usersDb_StringFieldUpdateOperationsInput;
}

export interface UserUpsertInput {
	userId: string;
	create: usersDb_UserCreateInput;
	update: usersDb_UserUpdateInput;
}

export interface InternalCreateMessageInput {
	message: string;
	email: string;
}

export interface InternalGetMessagesInput {
	take?: number;
	skip?: number;
}

export interface InternalGetUserInput {
	email: string;
}

export interface InternalUpdateAvatarIdInput {
	email: string;
	avatarId?: usersDb_NullableStringFieldUpdateOperationsInput;
}

export interface InternalUpdateProfileInput {
	email: string;
	firstName: usersDb_StringFieldUpdateOperationsInput;
	lastName: usersDb_StringFieldUpdateOperationsInput;
}

export interface InternalUserCreateInput {
	email: string;
	userId: string;
	name: string;
	lastName: string;
	firstName: string;
}

export interface InternalUserUpdateInput {
	email: string;
	firstName: usersDb_StringFieldUpdateOperationsInput;
}

export interface InternalUserUpsertInput {
	userId: string;
	create: usersDb_UserCreateInput;
	update: usersDb_UserUpdateInput;
}

export interface InjectedCreateMessageInput {
	message: string;
	email: string;
}

export interface InjectedGetMessagesInput {
	take?: number;
	skip?: number;
}

export interface InjectedGetUserInput {
	email: string;
}

export interface InjectedUpdateAvatarIdInput {
	email: string;
	avatarId?: usersDb_NullableStringFieldUpdateOperationsInput;
}

export interface InjectedUpdateProfileInput {
	email: string;
	firstName: usersDb_StringFieldUpdateOperationsInput;
	lastName: usersDb_StringFieldUpdateOperationsInput;
}

export interface InjectedUserCreateInput {
	email: string;
	userId: string;
	name: string;
	lastName: string;
	firstName: string;
}

export interface InjectedUserUpdateInput {
	email: string;
	firstName: usersDb_StringFieldUpdateOperationsInput;
}

export interface InjectedUserUpsertInput {
	userId: string;
	create: usersDb_UserCreateInput;
	update: usersDb_UserUpdateInput;
}

export interface GetUsersResponse {
	data?: {
		usersDb_findManyUser: {
			id: number;
			email: string;
			name: string;
		}[];
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface CreateMessageResponse {
	data?: {
		usersDb_createOneChat?: {
			id: number;
			message?: string;
			userId: number;
		};
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface GetMessagesResponse {
	data?: {
		usersDb_findManyChat: {
			id: number;
			message?: string;
			createdAt: string;
			User: {
				userId: string;
				firstName: string;
			};
		}[];
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface GetUserResponse {
	data?: {
		usersDb_findUniqueUser?: {
			id: number;
			firstName: string;
			lastName: string;
			email: string;
		};
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface UpdateAvatarIdResponse {
	data?: {
		usersDb_updateOneUser?: {
			id: number;
			avatarId?: string;
		};
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface UpdateProfileResponse {
	data?: {
		usersDb_updateOneUser?: {
			id: number;
		};
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface UserCreateResponse {
	data?: {
		usersDb_createOneUser?: {
			id: number;
		};
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface UserUpdateResponse {
	data?: {
		usersDb_updateOneUser?: {
			id: number;
		};
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface UserUpsertResponse {
	data?: {
		usersDb_upsertOneUser?: {
			id: number;
			email: string;
			name: string;
			avatarId?: string;
			firstName: string;
			lastName: string;
		};
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface GetUsersResponseData {
	usersDb_findManyUser: {
		id: number;
		email: string;
		name: string;
	}[];
}

export interface CreateMessageResponseData {
	usersDb_createOneChat?: {
		id: number;
		message?: string;
		userId: number;
	};
}

export interface GetMessagesResponseData {
	usersDb_findManyChat: {
		id: number;
		message?: string;
		createdAt: string;
		User: {
			userId: string;
			firstName: string;
		};
	}[];
}

export interface GetUserResponseData {
	usersDb_findUniqueUser?: {
		id: number;
		firstName: string;
		lastName: string;
		email: string;
	};
}

export interface UpdateAvatarIdResponseData {
	usersDb_updateOneUser?: {
		id: number;
		avatarId?: string;
	};
}

export interface UpdateProfileResponseData {
	usersDb_updateOneUser?: {
		id: number;
	};
}

export interface UserCreateResponseData {
	usersDb_createOneUser?: {
		id: number;
	};
}

export interface UserUpdateResponseData {
	usersDb_updateOneUser?: {
		id: number;
	};
}

export interface UserUpsertResponseData {
	usersDb_upsertOneUser?: {
		id: number;
		email: string;
		name: string;
		avatarId?: string;
		firstName: string;
		lastName: string;
	};
}

export interface usersDb_NullableStringFieldUpdateOperationsInput {
	set?: string;
}

export interface usersDb_StringFieldUpdateOperationsInput {
	set?: string;
}

export interface usersDb_UserCreateInput {
	email: string;
	lastName: string;
	firstName: string;
	name: string;
	userId: string;
	avatarId?: string;
	Chat?: usersDb_ChatCreateNestedManyWithoutUserInput;
}

export interface usersDb_ChatCreateNestedManyWithoutUserInput {
	create?: usersDb_ChatCreateWithoutUserInput;
	connectOrCreate?: usersDb_ChatCreateOrConnectWithoutUserInput;
	createMany?: usersDb_ChatCreateManyUserInputEnvelope;
	connect?: usersDb_ChatWhereUniqueInput;
}

export interface usersDb_ChatCreateWithoutUserInput {
	message?: string;
	createdAt?: string;
}

export interface usersDb_ChatCreateOrConnectWithoutUserInput {
	where: usersDb_ChatWhereUniqueInput;
	create: usersDb_ChatCreateWithoutUserInput;
}

export interface usersDb_ChatWhereUniqueInput {
	id?: number;
}

export interface usersDb_ChatCreateManyUserInputEnvelope {
	data: usersDb_ChatCreateManyUserInput[];
	skipDuplicates?: boolean;
}

export interface usersDb_ChatCreateManyUserInput {
	id?: number;
	message?: string;
	createdAt?: string;
}

export interface usersDb_UserUpdateInput {
	email?: usersDb_StringFieldUpdateOperationsInput;
	lastName?: usersDb_StringFieldUpdateOperationsInput;
	firstName?: usersDb_StringFieldUpdateOperationsInput;
	name?: usersDb_StringFieldUpdateOperationsInput;
	userId?: usersDb_StringFieldUpdateOperationsInput;
	avatarId?: usersDb_NullableStringFieldUpdateOperationsInput;
	Chat?: usersDb_ChatUpdateManyWithoutUserInput;
}

export interface usersDb_ChatUpdateManyWithoutUserInput {
	create?: usersDb_ChatCreateWithoutUserInput;
	connectOrCreate?: usersDb_ChatCreateOrConnectWithoutUserInput;
	upsert?: usersDb_ChatUpsertWithWhereUniqueWithoutUserInput;
	createMany?: usersDb_ChatCreateManyUserInputEnvelope;
	connect?: usersDb_ChatWhereUniqueInput;
	set?: usersDb_ChatWhereUniqueInput;
	disconnect?: usersDb_ChatWhereUniqueInput;
	delete?: usersDb_ChatWhereUniqueInput;
	update?: usersDb_ChatUpdateWithWhereUniqueWithoutUserInput;
	updateMany?: usersDb_ChatUpdateManyWithWhereWithoutUserInput;
	deleteMany?: usersDb_ChatScalarWhereInput;
}

export interface usersDb_ChatUpsertWithWhereUniqueWithoutUserInput {
	where: usersDb_ChatWhereUniqueInput;
	update: usersDb_ChatUpdateWithoutUserInput;
	create: usersDb_ChatCreateWithoutUserInput;
}

export interface usersDb_ChatUpdateWithoutUserInput {
	message?: usersDb_NullableStringFieldUpdateOperationsInput;
	createdAt?: usersDb_DateTimeFieldUpdateOperationsInput;
}

export interface usersDb_DateTimeFieldUpdateOperationsInput {
	set?: string;
}

export interface usersDb_ChatUpdateWithWhereUniqueWithoutUserInput {
	where: usersDb_ChatWhereUniqueInput;
	data: usersDb_ChatUpdateWithoutUserInput;
}

export interface usersDb_ChatUpdateManyWithWhereWithoutUserInput {
	where: usersDb_ChatScalarWhereInput;
	data: usersDb_ChatUpdateManyMutationInput;
}

export interface usersDb_ChatScalarWhereInput {
	AND?: usersDb_ChatScalarWhereInput;
	OR?: usersDb_ChatScalarWhereInput[];
	NOT?: usersDb_ChatScalarWhereInput;
	id?: usersDb_IntFilter;
	message?: usersDb_StringNullableFilter;
	createdAt?: usersDb_DateTimeFilter;
	userId?: usersDb_IntFilter;
}

export interface usersDb_IntFilter {
	equals?: number;
	in?: number[];
	notIn?: number[];
	lt?: number;
	lte?: number;
	gt?: number;
	gte?: number;
	not?: usersDb_NestedIntFilter;
}

export interface usersDb_NestedIntFilter {
	equals?: number;
	in?: number[];
	notIn?: number[];
	lt?: number;
	lte?: number;
	gt?: number;
	gte?: number;
	not?: usersDb_NestedIntFilter;
}

export interface usersDb_StringNullableFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	contains?: string;
	startsWith?: string;
	endsWith?: string;
	mode?: "default" | "insensitive";
	not?: usersDb_NestedStringNullableFilter;
}

export interface usersDb_NestedStringNullableFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	contains?: string;
	startsWith?: string;
	endsWith?: string;
	not?: usersDb_NestedStringNullableFilter;
}

export interface usersDb_DateTimeFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	not?: usersDb_NestedDateTimeFilter;
}

export interface usersDb_NestedDateTimeFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	not?: usersDb_NestedDateTimeFilter;
}

export interface usersDb_ChatUpdateManyMutationInput {
	message?: usersDb_NullableStringFieldUpdateOperationsInput;
	createdAt?: usersDb_DateTimeFieldUpdateOperationsInput;
}

export type JSONValue = string | number | boolean | JSONObject | Array<JSONValue>;

export type JSONObject = { [key: string]: JSONValue };

export interface GraphQLError {
	message: string;
	path?: ReadonlyArray<string | number>;
}
